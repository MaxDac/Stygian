name: cache-plts
description: 'Cache PLTs for Dialyzer'

inputs:
  otp:
    type: string
    description: 'OTP version'
    required: true
    default: '25.2.3'
  elixir:
    type: string
    description: 'Elixir version'
    required: true
    default: '1.15.4'

permissions:
  contents: read

runs:
  using: "composite"

  steps:
    # Don't cache PLTs based on mix.lock hash, as Dialyzer can incrementally update even old ones
    # Cache key based on Elixir & Erlang version (also useful when running in matrix)
    - name: Restore PLT cache
      uses: actions/cache/restore@v3
      id: plt_cache
      with:
        key: |
                      ${{ runner.os }}-${{ inputs.elixir }}-${{ inputs.otp }}-plt
        restore-keys: |
                      ${{ runner.os }}-${{ inputs.elixir }}-${{ inputs.otp }}-plt
        path: |
                      priv/plts

    # Create PLTs if no cache was found
    - name: Create PLTs
      if: steps.plt_cache.outputs.cache-hit != 'true'
      shell: bash
      run: mix dialyzer --plt
    
    # Step: Save PLT cache if it was updated
    - name: Save PLT cache
      uses: actions/cache/save@v3
      if: steps.plt_cache.outputs.cache-hit != 'true'
      id: plt_cache_save
      with:
        key: |
          ${{ runner.os }}-${{ inputs.elixir }}-${{ inputs.otp }}-plt
        path: |
          priv/plts
    
    # Step: Retrieving from cache or building and caching the PLTs for dialyzer
    - name: Caching PLTs
      uses: ./.github/actions/cache-plts
      with:
        otp: ${{ inputs.otp }}
        elixir: ${{ inputs.elixir }}
    
