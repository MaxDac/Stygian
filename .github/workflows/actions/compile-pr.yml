name: Elixir CI - Compilation

on:
  workflow_call:
    inputs:
      otp:
        type: string
        description: 'OTP version'
        required: true
        default: '25.2.3'
      elixir:
        type: string
        description: 'Elixir version'
        required: true
        default: '1.15.4'

env:
  MIX_ENV: dev

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    name: Test on OTP ${{ inputs.otp }} / Elixir ${{ inputs.elixir }}

    steps:
    # Step: Setup project and install/cache dependencies.
    - name: Install dependencies
      uses: ./actions/install-dependencies.yml
      with:
        otp: ${{ inputs.otp }}
        elixir: ${{ inputs.elixir }}

    # Step: Compile the project treating any warnings as errors.
    # Customize this step if a different behavior is desired.
    - name: Compiles without warnings
      run: mix compile --warnings-as-errors

    # Step: Check that the checked in code has already been formatted.
    # This step fails if something was found unformatted.
    # Customize this step as desired.
    - name: Check Formatting
      run: mix format --check-formatted

    # Step: Checks Credo rules.
    - name: Check Credo
      run: mix credo --strict
    
    # Step: Retrieving from cache or building and caching the PLTs for dialyzer
    - name: Caching PLTs
      uses: ./actions/cache-plts.yml
      with:
        otp: ${{ inputs.otp }}
        elixir: ${{ inputs.elixir }}

    # Step: Run Dialyzer
    - name: Run dialyzer
      run: mix dialyzer --format github
