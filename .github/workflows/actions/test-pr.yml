name: Elixir CI - Tests

on:
  workflow_call:
    inputs:
      postgres_image_version:
        description: 'Postgres image version'
        required: true
        default: 'postgres:11'
      postgres_test_password:
        description: 'Postgres test password'
        required: true
      otp:
        type: string
        description: 'OTP version'
        required: true
        default: '25.2.3'
      elixir:
        type: string
        description: 'Elixir version'
        required: true
        default: '1.15.4'

env:
  MIX_ENV: test

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    services:
      db:
        image: ${{ inputs.postgres_image_version }}
        ports: ['5432:5432']
        env:
          POSTGRES_PASSWORD: ${{ inputs.postgres_test_password }}
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5


    name: Test on OTP ${{matrix.otp}} / Elixir ${{matrix.elixir}}

    strategy:
      # Specify the OTP and Elixir versions to use when building
      # and running the workflow steps.
      matrix:
        otp: ['25.2.3']
        elixir: ['1.15.4']

    steps:

    # Step: Setup project and install/cache dependencies.
    - name: Install dependencies
      uses: MaxDac/Stygian/.github/workflows/actions/install-dependencies.yml@main
      with:
        otp: ${{ matrix.otp }}
        elixir: ${{ matrix.elixir }}
      
    # Step: Download project dependencies. If unchanged, uses
    # the cached version.
    - name: Install dependencies
      run: mix deps.get

    # Step: Compile the project treating any warnings as errors.
    # Customize this step if a different behavior is desired.
    - name: Compiles without warnings
      run: mix compile --warnings-as-errors

    # Step: Checks Credo rules.
    - name: Check Credo
      run: mix credo --strict

    # Step: Execute the tests.
    - name: Run tests
      run: mix test
